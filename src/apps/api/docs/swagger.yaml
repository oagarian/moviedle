basePath: /api
definitions:
  response.Director:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  response.ErrorMessage:
    properties:
      invalid_fields:
        items:
          $ref: '#/definitions/response.InvalidField'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.Genre:
    properties:
      code:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  response.InvalidField:
    properties:
      description:
        type: string
      field_name:
        type: string
    type: object
  response.Movie:
    properties:
      cover_url:
        type: string
      directors:
        items:
          $ref: '#/definitions/response.Director'
        type: array
      genres:
        items:
          $ref: '#/definitions/response.Genre'
        type: array
      id:
        type: string
      oscars:
        items:
          $ref: '#/definitions/response.Oscar'
        type: array
      resume:
        type: string
      slogan:
        type: string
      title:
        type: string
      year:
        type: integer
    type: object
  response.Oscar:
    properties:
      code:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  description: Moviedle project
  title: Moviedle
  version: "1.0"
paths:
  /movies:
    get:
      consumes:
      - application/json
      description: Allow a user list all movies in database.
      operationId: Movies.All
      produces:
      - application/json
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/response.Movie'
        "400":
          description: Bad Request.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Internal error.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: Database out of function.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: List all movies.
      tags:
      - Movie
  /movies/{id}:
    get:
      consumes:
      - application/json
      description: Allow a user to see details of a movie.
      operationId: Movies.Get
      parameters:
      - default: a92adbf5-930c-41ce-bff3-b11798505f1c
        description: Movie ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/response.Movie'
        "400":
          description: Bad Request.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Internal error.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: Database out of function.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: View movie details.
      tags:
      - Movie
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
